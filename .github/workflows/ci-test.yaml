name: MLOps Continuous Integration

on:
  pull_request:
    branches:
      - develop
    paths:
      - '**'                        # Trigger workflows for any change in the repository(Default)
      - 'mlops-final-project/**'    # triggers workflow in this directory

env:
  AWS_DEFAULT_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      working-directory: ./mlops-final-project
      run: |
        pip install -r requirements.txt
        pip install pipenv
        pipenv install --dev

    - name: Run unit tests
      working-directory: ./mlops-final-project
      run: |
        pipenv run pytest unit_test/

    - name: Run integration tests
      working-directory: ./mlops-final-project
      run: |
        pipenv install --dev deepdiff
        chmod +x integration_test/run.sh    
        ./integration_test/./run.sh

    - name: Linting and Formatting
      working-directory: ./mlops-final-project
      run: |
        pipenv install --dev pylint black isort
        isort .
        black .
        pipenv run pylint --recursive=y .

    - name: Pre-commit Hooks
      working-directory: ./mlops-final-project
      run: |
        pipenv install --dev pre-commit
        pipenv run pre-commit run --all-files

    - name: Run Makefile targets
      working-directory: ./mlops-final-project
      run: |
        make --version
        make publish

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log into Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      run: |
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/mlops-final-project
        GIT_SHA=${{ github.sha }}
        GIT_TAG=${{ github.ref_name }}
        TAG=${GIT_TAG:-latest}
        
        docker build -t $IMAGE_NAME:$GIT_SHA -t $IMAGE_NAME:$TAG -f dockerfile .
        docker push $IMAGE_NAME:$GIT_SHA
        docker push $IMAGE_NAME:$TAG

  train:
    runs-on: ubuntu-latest
    needs: docker

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Run training script
      run: |
        docker run --rm ${{ secrets.DOCKER_USERNAME }}/mlops-final-project:${{ github.sha }} python3 03-model-training/landmine_train.py
        
  deploy:
    runs-on: ubuntu-latest
    needs: train

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Deploy to EKS
      run: |
        kubectl apply -f /04-deployment/web-service/model-deployment.yaml


